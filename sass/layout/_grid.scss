.row{
// max-width ->1140px -> in rem 1140/10 ->114rem
max-width: $grid-width;//diff. btw width & max width is max-width entire width of the viewport even if the browser shrink from the specified width
background-color: #eee;
margin: 0 auto; // when set to auto browser will automatically sets the left & the right margin equally

&:not(:last-child){//not pseudo element specifies margin bottom for every columns except last child
    margin-bottom: $gutter-vertical;
}
@include clearfix;

//attribute selector ( ^-> starting, $-> ending,*-> containing )
[class^="col-"]{// ^ -> first charachter & [class^="col-"] selects every class starting with character col-
    background-color: orangered;
    float: left;
    &:not(:last-child){
        margin-right: $gutter-horizontal;
    }
}

.col-1-of-2{
    //Diff btw. native css calc & scss calc is that in scss we can mix multiple units ie. rem ,% etc but in css not
    width: calc((100% - #{$gutter-horizontal}) / 2); // in scss we have to use #{} before using scss variable in calc()
 
}
 .col-1-of-3{
     width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
 }
 .col-2-of-3{
    width: calc(2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal} );
}
 .col-1-of-4{
     width: calc((100% - 3 * #{$gutter-horizontal}) / 4 );
 }
 .col-3-of-4{
    width: calc(3 * ((100% - 3 * #{$gutter-horizontal}) / 4) + 2 * #{$gutter-horizontal} );
}

}