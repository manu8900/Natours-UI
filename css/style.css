/* COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485
 */
*,
*::after,
*::before {
  /* Changing predefined css property of whole page*/
  margin: 0;
  padding: 0;
  box-sizing: inherit;
  /* To inherit properties of box-sizing */ }

html {
  /* we want here 10px so when we do by % it wil be 10/16(default font size * 100 =62.5%)*/
  font-size: 62.5%;
  /* we change root font-size to 10px so that 1rem=10px */ }

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem;
  box-sizing: border-box; }

.header {
  height: 95vh;
  /* similar to 95 % */
  background-image: linear-gradient(to right bottom, rgba(13, 185, 36, 0.6), rgba(0, 144, 79, 0.6)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  position: relative;
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%); }

.header__logo-box {
  position: absolute;
  top: 4rem;
  /*4rem = 40px since we specified 1rem=10px in root*/
  left: 4rem; }

.header__logo {
  height: 35px; }

.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center; }

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  backface-visibility: hidden;
  margin-bottom: 6rem; }

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /*animation-delay: 3s;*/
  /*animation-iteration-count: 3;*/ }

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.75rem;
  animation: moveInRight 1s ease-out; }

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-10rem); }
  80% {
    transform: translateX(1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(10rem); }
  80% {
    transform: translateX(-1rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(3rem); }
  100% {
    opacity: 1;
    transform: translate(0); } }

.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 10rem;
  transition: all .2s;
  position: relative;
  font-size: 1.6rem; }

.btn:hover {
  transform: translateY(-3px);
  box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2); }

.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
  /* 0->shadow in x dir. 5px->sh. in y direc. 10px-blur & rgba( , , ,.2->opacity )    */ }

.btn--white {
  background-color: #fff;
  color: #777; }

.btn:after {
  /* content & display is must in parent class of pseudo element after */
  content: "";
  display: inline-block;
  /*coz button we have is also inline-block */
  height: 100%;
  width: 100%;
  border-radius: 10rem;
  position: absolute;
  /* Remember whenever we set an element as absolute its parent element must be a relative*/
  top: 0;
  left: 0;
  z-index: -1;
  /* to place it behind button, if 1 then above the parent */
  transition: all .3s;
  /* transition is set in the initial element*/ }

.btn--white:after {
  background-color: #fff; }

.btn:hover::after {
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0; }

.btn--animated {
  animation: moveInBottom 0.5s ease-out .75s;
  /* format is aniamtion dur. anim time func. animation delay*/
  animation-fill-mode: backwards; }
